Microsoft (R) Macro Assembler Version 6.11		    11/14/21 14:28:47
tempfile.asm						     Page 1 - 1


				;********************************************************************
 0000				data  segment
				;提示信息
 0000 59 6F 75 72 20 6E		mess1    db    'Your name:','$'
       61 6D 65 3A 24
 000B 59 6F 75 72 20 74		mess2    db    'Your telephone number:','$'
       65 6C 65 70 68 6F
       6E 65 20 6E 75 6D
       62 65 72 3A 24
 0022 44 6F 20 79 6F 75		mess3    db    'Do you want to search?(y/n)','$'
       20 77 61 6E 74 20
       74 6F 20 73 65 61
       72 63 68 3F 28 79
       2F 6E 29 24
 003E 0D 0A 50 6C 65 61		mess4    db    0dh,0ah,'Please enter the name you want to search?','$'
       73 65 20 65 6E 74
       65 72 20 74 68 65
       20 6E 61 6D 65 20
       79 6F 75 20 77 61
       6E 74 20 74 6F 20
       73 65 61 72 63 68
       3F 24
 006A 46 61 69 6C 65 64		mess5    db    'Failed. No match',0dh,0ah,'$'
       2E 20 4E 6F 20 6D
       61 74 63 68 0D 0A
       24
 007D 50 6C 65 61 73 65		mess6    db    'Please enter the number you want to store:','$'
       20 65 6E 74 65 72
       20 74 68 65 20 6E
       75 6D 62 65 72 20
       79 6F 75 20 77 61
       6E 74 20 74 6F 20
       73 74 6F 72 65 3A
       24
 00A8 0D 0A 24			crlf     db     0dh,0ah,'$'
				;需要输入信息
 00AB				stokin1  label  byte
 00AB 15					 max1      db     21
 00AC 00					 act1      db     ?
 00AD  0015 [				  	 stokn1    db     21 dup(?)
        00
       ]
 00C2				stokin2  label  word
 00C2 0C					 max2      db     12
 00C3 00					 act2      db     ?
 00C4  000C [					 stokn2    db     12 dup(?)
        00
       ]
				;一些标记信息
 00D0  0032 [			numtable   db     50 dup(28 dup(?))
        001C [
	 00
	]
       ]
 0648 0000			name_count dw    0
 064A 0000			endaddr   dw     ?
 064C 0000			swapped   dw     ?
 064E 0000			totalnum dw   ?
 0650  001C [			savenp    db     28 dup(?),0dh,0ah,'$'
        00
       ] 0D 0A 24
 066F 0000			searchaddr dw    ?
 0671 00			flag      db     ?
 0672 00			flagb      db     ?
 0673 6E 61 6D 65 20 20		show      db     'name                phone',0dh,0ah,'$'
       20 20 20 20 20 20
       20 20 20 20 20 20
       20 20 70 68 6F 6E
       65 0D 0A 24
 068F				data  ends
				;********************************************************************
 0000				code  segment
				   assume ds:data,cs:code,es:data
 0000				main    proc    far
 0000  B8 ---- R		       mov ax,data
 0003  8E D8			       mov ds,ax
 0005  8E C0			       mov es,ax
 0007  8D 3E 00D0 R		       lea di,numtable     ;di must be protected
 000B  8D 16 007D R		       lea dx,mess6        ;显示信息，请输入想存入的电话号码总数
 000F  B4 09			       mov ah,09   
 0011  CD 21			       int 21h
 0013  BB 0000			       mov bx,0
 0016				  newchar:                ;这个是参考书上例2.6，从键盘接收数字，然后转换成ASCII码
 0016  B4 01			       mov ah,1          ;从键盘接收totalnum,并回显AL=输入字符
 0018  CD 21			       int 21h
 001A  2C 30			       sub al,30h         ;ascii to binary
 001C  7C 10			       jl next             ;jump if<0
 001E  3C 09			       cmp al,9            ;is it >9d?
 0020  7F 0C			       jg next             ;yes jump
 0022  98			       cbw                 ;byte in AL to word in AX
					   	;(digit is now in AX)
 0023  93			       xchg ax,bx            ;交换
 0024  B9 000A			       mov cx,10             ;put 10 dec in CX
 0027  F7 E1			       mul cx                  ;number times 10 （DX,AX）<-(AX)*src
 0029  93			       xchg ax,bx               ;交换
 002A  03 D8			       add bx,ax              ;add digit to number
 002C  EB E8			       jmp newchar                ;get next digit
 002E				   next:
 002E  89 1E 064E R		       mov totalnum,bx
 0032  8D 16 00A8 R		       lea dx,crlf
 0036  B4 09			       mov ah,09
 0038  CD 21			       int 21h
 003A				 a10:                              
 003A  8D 16 0000 R		       lea dx,mess1                ;显示请输入名字
 003E  B4 09			       mov ah,09
 0040  CD 21			       int 21h
 0042  E8 0054			       call input_name  
 0045  FF 06 0648 R		       inc  name_count
 0049  E8 0071			       call stor_name 
				       
 004C  8D 16 000B R		       lea dx,mess2                 ;显示请输入电话
 0050  B4 09			       mov ah,09
 0052  CD 21			       int 21h
 0054  E8 0070			       call inphone
 0057  E8 0092			       call stor_phone
				       
 005A  83 3E 0648 R 00		       cmp  name_count,0
 005F  74 33			       je  exit
				       
 0061  8B 1E 064E R		       mov bx,totalnum
 0065  39 1E 0648 R		       cmp  name_count,bx         ;输入与之前输入总数相等的姓名，电话
 0069  75 CF			       jnz  a10
 006B  E8 0088			       call name_sort
 006E				 a20:
 006E  8D 16 0022 R		       lea dx,mess3                 ;显示是否需要查找电话号码
 0072  B4 09			       mov ah,09
 0074  CD 21			       int 21h
 0076  B4 08			       mov ah,08                     ;键盘输入，无回显，检测ctrl-break 或 Ctrl-C,AL=输入字符
 0078  CD 21			       int 21h
 007A  3C 79			       cmp al,'y'
 007C  74 06			       jz  a30
 007E  3C 6E			       cmp al,'n'
 0080  74 12			       jz  exit
 0082  EB EA			       jmp a20                          
 0084				 a30:
 0084  B4 09			       mov ah,09
 0086  8D 16 003E R		       lea dx,mess4             ;显示询问名字
 008A  CD 21			       int 21h
 008C  E8 000A			       call input_name
 008F				 a40:
 008F  E8 00B6			       call name_search
				       ;call printline
					   ;dec flag
					   ;sub flag,0  ;要是没结束的话
				       ;jnz  a40
 0092  EB DA			       jmp a20
 0094				 exit:
 0094  B8 4C00			       mov ax,4c00h            ;;;;带返回码终止，AL=子出口码，AH=返回代码，00=正常终止，01=用Ctrl-c终止，02=严重设备错误终止，03=用功能调用31H终止
 0097  CD 21			       int 21h
 0099				 main endp
				;--------------------------------------------------------------------
 0099				input_name  proc  near
 0099  B4 0A			     mov ah,0ah			;将键盘输入至缓冲区。dx = 缓冲区首
 009B  8D 16 00AB R		     lea dx,stokin1
 009F  CD 21			     int 21h
				     
 00A1  B4 09			     mov ah,09			;输出回车
 00A3  8D 16 00A8 R		     lea dx,crlf
 00A7  CD 21			     int 21h
				     
 00A9  2A FF			     sub bh,bh			;bx高位清零
 00AB  8A 1E 00AC R		     mov bl,act1		;把输入名字的字符长度存入bl
 00AF  B9 0015			     mov cx,21			;最大长度存入cx
 00B2  2B CB			     sub cx,bx          ;dst<-dst-src,cx为计数功能寄存器,cx存入剩余字符的个数，为填充空格做准备
 00B4				b10:
 00B4  C6 87 00AD R 20		     mov stokn1[bx],' '   ;补全空格
 00B9  43			     inc bx
 00BA  E2 F8			     loop b10
 00BC  C3			    ret
 00BD				input_name endp
				;--------------------------------------------------------------------
 00BD				stor_name     proc   near
 00BD  8D 36 00AB R		      lea  si,stokin1
 00C1  B9 0011			      mov  cx,17
 00C4  F3/ A4			      rep  movsb
 00C6  C3			      ret
 00C7				stor_name  endp
				;--------------------------------------------------------------------
 00C7				inphone   proc   near
 00C7  B4 0A			     mov ah,0ah
 00C9  8D 16 00C2 R		     lea dx,stokin2
 00CD  CD 21			     int 21h
 00CF  B4 09			     mov ah,09
				     
 00D1  8D 16 00A8 R		     lea dx,crlf
 00D5  CD 21			     int 21h
				     
 00D7  2A FF			     sub bh,bh
 00D9  8A 1E 00C3 R		     mov bl,act2
 00DD  B9 000C			     mov cx,12
 00E0  2B CB			     sub cx,bx
 00E2				c10:
 00E2  C7 87 00C2 R 0020	     mov stokin2[bx],' '
 00E8  43			     inc bx
 00E9  E2 F7			     loop c10
 00EB  C3			     ret 
 00EC				inphone endp
				;--------------------------------------------------------------------
 00EC				stor_phone  proc near
 00EC  8D 36 00C2 R		     lea  si,stokin2
 00F0  B9 000B			     mov  cx,11
 00F3  F3/ A4			     rep  movsb   ;movs 串传送指令 cmps 串比较操作
 00F5  C3			     ret
 00F6				stor_phone endp
				;--------------------------------------------------------------------
 00F6				name_sort  proc near
 00F6  83 EF 1C			     sub  di,28
 00F9  89 3E 064A R		     mov  endaddr,di  ;endaddr中存放的是numtable中手机号结束的位置
 00FD				 c1:
 00FD  C7 06 064C R 0000	     mov  swapped,0
 0103  8D 36 00D0 R		     lea  si,numtable
 0107				 c2:
 0107  B9 0011			     mov  cx,17
 010A  8B FE			     mov  di,si
 010C  83 C7 1C			     add  di,28
 010F  8B C7			     mov  ax,di
 0111  8B DE			     mov  bx,si   ;cmpsb si-di  movsb di<-si
 0113  F3/ A6			     repz cmpsb   ;repz 当为0时重复串操作；repe 当相等时重复串操作；rep 重复串操作直至计数寄存器count reg 的内容为0为止
 0115  76 21			     jbe  c3     ;CF与ZF=1，小于等于则转移
				 ;chang order 
 0117  8B F3			     mov si,bx
 0119  8D 3E 0650 R		     lea di,savenp
 011D  B9 001C			     mov cx,28
 0120  F3/ A4			     rep movsb
 0122  B9 001C			     mov cx,28
 0125  8B FB			     mov di,bx
 0127  F3/ A4			     rep movsb
 0129  B9 001C			     mov cx,28
 012C  8D 36 0650 R		     lea si,savenp
 0130  F3/ A4			     rep movsb
 0132  C7 06 064C R 0001	     mov swapped,1
 0138				 c3:
 0138  8B F0			     mov  si,ax
 013A  3B 36 064A R		     cmp  si,endaddr
 013E  72 C7			     jb   c2        ;CF=1，则转移，小于等于则转移
 0140  83 3E 064C R 00		     cmp  swapped,0
 0145  75 B6			     jnz  c1    ;结果不为0则转移
 0147  C3			     ret
 0148				name_sort endp
				;--------------------------------------------------------------------
 0148				name_search proc near
 0148  8D 1E 00D0 R		      lea  bx,numtable
 014C  C6 06 0671 R 00			  mov  flag,0      ;;;立个flag
 0151				   d: 
 0151  B9 0011			      mov  cx,17
 0154  8D 36 00AB R			  lea si,stokin1
 0158  8B FB			      mov  di,bx
 015A  F3/ A6			      repz cmpsb
 015C  74 1A			      jz  d2
				      
 015E  83 C3 1C			      add bx,28            ;下一条
 0161  3B 1E 064A R		      cmp  bx,endaddr   
 0165  76 EA			      jbe  d             ;未结束，继续找

 0167  80 2E 0671 R 00			  sub flag,0  ;要是没有找到的话
 016C  74 02			      jz  nof
 016E  EB 20			      jmp  dexit         ;结束，退出
				      
 0170  8D 16 006A R		 nof:  lea dx,mess5
 0174  B4 09			       mov ah,09
 0176  CD 21			       int 21h 
 0178				  d2:
 0178  89 1E 066F R		      mov searchaddr,bx
 017C  FE 06 0671 R			  inc flag
 0180  E8 000E				  call printline
 0183  83 C3 1C				  add bx,28            ;下一条
 0186  3B 1E 064A R		      cmp  bx,endaddr   
 018A  76 C5			      jbe  d             ;未结束，继续找
 018C  EB 02			      jmp  dexit         ;结束，退出
 018E  75 C1			      jnz  d
				      
 0190				 dexit:
 0190  C3			        ret
 0191				name_search endp
				;--------------------------------------------------------------------
 0191				printline proc  near
 0191  80 2E 0671 R 00		       sub flag,0  ;要是没有找到的话
 0196  74 1F			       jz  no
 0198				p10:
 0198  B4 09			       mov ah,09
 019A  8D 16 0673 R		       lea dx,show
 019E  CD 21			       int 21h
				       
 01A0  B9 001C			       mov cx,28
 01A3  8B 36 066F R		       mov si,searchaddr
 01A7  8D 3E 0650 R		       lea di,savenp
 01AB  F3/ A4			       rep movsb
				       
 01AD  8D 16 0650 R		       lea dx,savenp
 01B1  B4 09			       mov ah,09
 01B3  CD 21			       int 21h
 01B5  EB 08			       jmp fexit
				       
 01B7  8D 16 006A R		no:    lea dx,mess5
 01BB  B4 09			       mov ah,09
 01BD  CD 21			       int 21h 
 01BF				fexit:  
 01BF  C3			       ret
 01C0				printline endp
				;--------------------------------------------------------------------
 01C0				code ends
				;--------------------------------------------------------------------
				end main       



Microsoft (R) Macro Assembler Version 6.11		    11/14/21 14:28:47
tempfile.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

code . . . . . . . . . . . . . .	16 Bit	 01C0	  Para	  Private 
data . . . . . . . . . . . . . .	16 Bit	 068F	  Para	  Private 


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

inphone  . . . . . . . . . . . .	P Near	 00C7	  code	Length= 0025 Public
  c10  . . . . . . . . . . . . .	L Near	 00E2	  code	
input_name . . . . . . . . . . .	P Near	 0099	  code	Length= 0024 Public
  b10  . . . . . . . . . . . . .	L Near	 00B4	  code	
main . . . . . . . . . . . . . .	P Far	 0000	  code	Length= 0099 Public
  newchar  . . . . . . . . . . .	L Near	 0016	  code	
  next . . . . . . . . . . . . .	L Near	 002E	  code	
  a10  . . . . . . . . . . . . .	L Near	 003A	  code	
  a20  . . . . . . . . . . . . .	L Near	 006E	  code	
  a30  . . . . . . . . . . . . .	L Near	 0084	  code	
  a40  . . . . . . . . . . . . .	L Near	 008F	  code	
  exit . . . . . . . . . . . . .	L Near	 0094	  code	
name_search  . . . . . . . . . .	P Near	 0148	  code	Length= 0049 Public
  d  . . . . . . . . . . . . . .	L Near	 0151	  code	
  nof  . . . . . . . . . . . . .	L Near	 0170	  code	
  d2 . . . . . . . . . . . . . .	L Near	 0178	  code	
  dexit  . . . . . . . . . . . .	L Near	 0190	  code	
name_sort  . . . . . . . . . . .	P Near	 00F6	  code	Length= 0052 Public
  c1 . . . . . . . . . . . . . .	L Near	 00FD	  code	
  c2 . . . . . . . . . . . . . .	L Near	 0107	  code	
  c3 . . . . . . . . . . . . . .	L Near	 0138	  code	
printline  . . . . . . . . . . .	P Near	 0191	  code	Length= 002F Public
  p10  . . . . . . . . . . . . .	L Near	 0198	  code	
  no . . . . . . . . . . . . . .	L Near	 01B7	  code	
  fexit  . . . . . . . . . . . .	L Near	 01BF	  code	
stor_name  . . . . . . . . . . .	P Near	 00BD	  code	Length= 000A Public
stor_phone . . . . . . . . . . .	P Near	 00EC	  code	Length= 000A Public


Symbols:

                N a m e                 Type     Value    Attr

act1 . . . . . . . . . . . . . .	Byte	 00AC	  data	
act2 . . . . . . . . . . . . . .	Byte	 00C3	  data	
crlf . . . . . . . . . . . . . .	Byte	 00A8	  data	
endaddr  . . . . . . . . . . . .	Word	 064A	  data	
flagb  . . . . . . . . . . . . .	Byte	 0672	  data	
flag . . . . . . . . . . . . . .	Byte	 0671	  data	
max1 . . . . . . . . . . . . . .	Byte	 00AB	  data	
max2 . . . . . . . . . . . . . .	Byte	 00C2	  data	
mess1  . . . . . . . . . . . . .	Byte	 0000	  data	
mess2  . . . . . . . . . . . . .	Byte	 000B	  data	
mess3  . . . . . . . . . . . . .	Byte	 0022	  data	
mess4  . . . . . . . . . . . . .	Byte	 003E	  data	
mess5  . . . . . . . . . . . . .	Byte	 006A	  data	
mess6  . . . . . . . . . . . . .	Byte	 007D	  data	
name_count . . . . . . . . . . .	Word	 0648	  data	
numtable . . . . . . . . . . . .	Byte	 00D0	  data	
savenp . . . . . . . . . . . . .	Byte	 0650	  data	
searchaddr . . . . . . . . . . .	Word	 066F	  data	
show . . . . . . . . . . . . . .	Byte	 0673	  data	
stokin1  . . . . . . . . . . . .	Byte	 00AB	  data	
stokin2  . . . . . . . . . . . .	Word	 00C2	  data	
stokn1 . . . . . . . . . . . . .	Byte	 00AD	  data	
stokn2 . . . . . . . . . . . . .	Byte	 00C4	  data	
swapped  . . . . . . . . . . . .	Word	 064C	  data	
totalnum . . . . . . . . . . . .	Word	 064E	  data	

	   0 Warnings
	   0 Errors
