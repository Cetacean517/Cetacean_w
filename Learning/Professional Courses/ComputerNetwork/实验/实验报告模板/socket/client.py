# coding=utf-8import socket"""编写一个 返回固定页面的 http服务器程序,  服务器端程序"""def service_client(new_socket):    # 1,接收请求的内容,参数代表 一次可以接收到的最大数据，返回 bytes对象    request = new_socket.recv(1024)    print(request)    #    2.返回 http 格式的数据给浏览器    #     需要有  header 和 body    response = "HTTP/1.1 200 OK\r\n"    response += "\r\n"    response += "<h1> 返回的内容：hahahah  </h1>"    new_socket.send(response.encode("utf-8"))    #     3.关闭套接字，也既关闭 程序所涉及文件的 文件描述符   .encode("utf-8")    new_socket.close()def main():    """整体控制"""    #     1.创建套接字，返回一个 特定类型的套接字对象，还有待于确定具体的值。    tcp_server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)    #     2.绑定本机IP和端口，用于 客户端找到 特定的进程    tcp_server_socket.bind(("", 7890))    #     3.变为 监听套接字，等待 客户端发送请求 来激活阻塞,可以指定能够接受的最大连接数    tcp_server_socket.listen(128)    while True:        #     4.等待客户端的连接,若有客户端发来请求，会返回一个客户端的套接字用于 数据的回传        new_socket, client_addr = tcp_server_socket.accept()        # 5.为这个客户端的请求做处理        service_client(new_socket)#     关闭监听套接字    tcp_server_socket.close()if __name__ == '__main__':    main()