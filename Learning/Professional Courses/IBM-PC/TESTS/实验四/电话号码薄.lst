Microsoft (R) Macro Assembler Version 6.11		    10/21/21 12:24:09
tempfile.asm						     Page 1 - 1


 0000				data segment
 0000 0000				count dw 0;记录有几行人名-号码
 0002 0000				temp dw 0 ;输入暂存
 0004  0032 [				telbook db 50 dup(32 dup(' '));设置一个50*32的号码簿
        0020 [
	 20
	]
       ]
 0644 0D 0A 0D 0A 2A 2A			window1 db 13,10,13,10, '*******|Menu|*******' ,13,10;菜单提示
       2A 2A 2A 2A 2A 7C
       4D 65 6E 75 7C 2A
       2A 2A 2A 2A 2A 2A
       0D 0A
 065E  31 2D 2D 49 6E 73		        db '1--Insert' , 13,10
       65 72 74 0D 0A
 0669  32 2D 2D 53 65 61		        db '2--Search' , 13,10
       72 63 68 0D 0A
 0674  33 2D 2D 4C 69 73		        db '3--List' ,13,10
       74 0D 0A
 067D  34 2D 2D 51 75 69		        db '4--Quit' ,13,10
       74 0D 0A
 0686  2A 2A 2A 2A 2A 2A		        db '********************' ,13,10
       2A 2A 2A 2A 2A 2A
       2A 2A 2A 2A 2A 2A
       2A 2A 0D 0A
 069C  53 65 6C 65 63 74		        db 'Select:' ,'$'
       3A 24
 06A4 0D 0A 0D 0A 2A 2A			window2 db 13,10,13,10, '******|Search|******' ,13,10;查找菜单提示
       2A 2A 2A 2A 7C 53
       65 61 72 63 68 7C
       2A 2A 2A 2A 2A 2A
       0D 0A
 06BE  31 2D 2D 4E 61 6D		        db '1--Name' , 13,10
       65 0D 0A
 06C7  32 2D 2D 54 65 6C		        db '2--Telephone' , 13,10
       65 70 68 6F 6E 65
       0D 0A
 06D5  33 2D 2D 51 75 69		        db '3--Quit' ,13,10
       74 0D 0A
 06DE  2A 2A 2A 2A 2A 2A		        db '********************' ,13,10
       2A 2A 2A 2A 2A 2A
       2A 2A 2A 2A 2A 2A
       2A 2A 0D 0A
 06F4  53 65 6C 65 63 74		        db 'Select:' ,'$'
       3A 24
 06FC 0D 0A 0D 0A 31 2D			str1 db 13,10,13,10, '1--Input name:' , '$'
       2D 49 6E 70 75 74
       20 6E 61 6D 65 3A
       24
 070F 0D 0A 32 2D 2D 49			str2 db 13,10, '2--Input telephone:' , '$'
       6E 70 75 74 20 74
       65 6C 65 70 68 6F
       6E 65 3A 24
 0725 0D 0A 0D 0A 2D 2D			str3 db 13,10,13,10, '--Name--------------Telephone--' ,13,10,13,10, '$'
       4E 61 6D 65 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       54 65 6C 65 70 68
       6F 6E 65 2D 2D 0D
       0A 0D 0A 24
 074D 0D 0A 0D 0A 4E 6F			str4 db 13,10,13,10, 'Not exist!!!' , 13,10, '$'
       74 20 65 78 69 73
       74 21 21 21 0D 0A
       24
 0760 0D 0A 0D 0A 2D 2D			str5 db 13,10,13,10, '-----------------------------' ,13,10,13,10, '$'
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 2D 2D 2D
       2D 2D 2D 0D 0A 0D
       0A 24
 0786 0D 0A 0D 0A 4E 6F			str6 db 13,10,13,10, 'No record!!!' , 13,10, '$'
       20 72 65 63 6F 72
       64 21 21 21 0D 0A
       24
 0799 0D 0A 0D 0A 45 72			error db 13,10,13,10, 'Error!!!You should input 1-4 !' ,13,10, '$'
       72 6F 72 21 21 21
       59 6F 75 20 73 68
       6F 75 6C 64 20 69
       6E 70 75 74 20 31
       2D 34 20 21 0D 0A
       24
 07BE 0D 0A 0D 0A 45 72			error1 db 13,10,13,10, 'Error!!!You should input 1-3 !' ,13,10, '$'
       72 6F 72 21 21 21
       59 6F 75 20 73 68
       6F 75 6C 64 20 69
       6E 70 75 74 20 31
       2D 33 20 21 0D 0A
       24
 07E3 15 00				N_Temp db 21,? ;缓冲区最大容量21
 07E5  0014 [				N_T db 20 dup (' '), ' ';姓名，20个可输入空间，以及最后的分隔空间
        20
       ] 20
 07FA 09 00				T_Temp db 9,?  ;缓冲区最大容量9
 07FC  0008 [				T_T db 8 dup (' '), ' ' ,13,10, '$';电话号码，8个可输入空间，最后分隔
        20
       ] 20 0D 0A 24
 0808				data ends

				;宏操作--操作名 macro 操作数，调用时--操作名 操作数
				print macro x1;输出字符串
					lea dx,x1
					mov ah,9
					int 21h
				endm

				input macro x1;键盘输入到缓冲区
					lea dx,x1
					mov ah,0ah
					int 21h
				endm

				quhc macro Temp,T        ;去除回车符，即把Temp的内容复制一份到T的时候，不复制Temp的最后的回车符
					sub dx,dx
					mov dl,Temp+1		 ;Temp中的字符数
					lea si,T             ;T的偏移地址
					add si,dx            ;T转移到Temp结束位置
					mov byte ptr[si], ' ';把本来Temp的回车位置的回车替换成空格
				endm

				renew macro nn,cnt;还原缓冲区内容，重新置为空白内容再输入
					local next
					mov cx,cnt    ;置为空格的位数，inc命令自动与cx作比较，到了自动结束loop
					lea si,nn     ;还原nn的内容，将其置为空白内容
					next:mov byte ptr[si], ' '
					     inc si
					     loop next
				endm

 0000				code segment
					assume cs:code,ds:data
 0000				start:
 0000  B8 ---- R			mov ax,data
 0003  8E D8				mov ds,ax
 0005  8E C0				mov es,ax
 0007  8D 3E 0004 R			lea di,telbook;di设为号码簿的偏移地址
					
					;主菜单功能选择
 000B					L1:print window1
 000B  8D 16 0644 R	     1		lea dx,window1
 000F  B4 09		     1		mov ah,9
 0011  CD 21		     1		int 21h
 0013  B4 01				   mov ah,1
 0015  CD 21				   int 21h
 0017  3C 31				   cmp al,'1';如果选择1号功能，则跳转到输入Insert子程序
 0019  75 05				   jne L2    ;否则进行下一个判断
 001B  E8 0025				   call Insert
 001E  EB EB				   jmp L1
 0020  3C 32				L2:cmp al,'2';如果选择2号功能，则跳转到查找Search子程序
 0022  75 05				   jne L3    ;否则进行下一个判断
 0024  E8 008D				   call Search
 0027  EB E2				   jmp L1
 0029  3C 33				L3:cmp al,'3';如果选择3号功能，则跳转到显示List子程序
 002B  75 05				   jne L4    ;否则进行下一个判断
 002D  E8 019F				   call List
 0030  EB D9				   jmp L1
 0032  3C 34				L4:cmp al,'4';如果选择4号功能，则跳出DOS，程序结束
 0034  75 03 E9 01CB			   je L5
					   print error;否则选择有误，输出提示语句再重新输入
 0039  8D 16 0799 R	     1		lea dx,error
 003D  B4 09		     1		mov ah,9
 003F  CD 21		     1		int 21h
 0041  EB C8				   jmp L1
					   
 0043				Insert proc;输入子程序
					renew N_T,20    ;还原缓冲区内容
 0043  B9 0014		     1		mov cx,20    ;置为空格的位数，inc命令自动与cx作比较，到了自动结束loop
 0046  8D 36 07E5 R	     1		lea si,N_T     ;还原nn的内容，将其置为空白内容
 004A  C6 04 20		     1		??0000:mov byte ptr[si], ' '
 004D  46		     1		     inc si
 004E  E2 FA		     1		     loop ??0000
					renew T_T,8
 0050  B9 0008		     1		mov cx,8    ;置为空格的位数，inc命令自动与cx作比较，到了自动结束loop
 0053  8D 36 07FC R	     1		lea si,T_T     ;还原nn的内容，将其置为空白内容
 0057  C6 04 20		     1		??0001:mov byte ptr[si], ' '
 005A  46		     1		     inc si
 005B  E2 FA		     1		     loop ??0001
					print str1
 005D  8D 16 06FC R	     1		lea dx,str1
 0061  B4 09		     1		mov ah,9
 0063  CD 21		     1		int 21h
					input N_Temp    ;输入姓名存在暂存缓冲区，带回车符结束
 0065  8D 16 07E3 R	     1		lea dx,N_Temp
 0069  B4 0A		     1		mov ah,0ah
 006B  CD 21		     1		int 21h
					quhc N_Temp,N_T ;去除回车符保存
 006D  2B D2		     1		sub dx,dx
 006F  8A 16 07E4 R	     1		mov dl,N_Temp+1		 ;Temp中的字符数
 0073  8D 36 07E5 R	     1		lea si,N_T             ;T的偏移地址
 0077  03 F2		     1		add si,dx            ;T转移到Temp结束位置
 0079  C6 04 20		     1		mov byte ptr[si], ' ';把本来Temp的回车位置的回车替换成空格
					print str2
 007C  8D 16 070F R	     1		lea dx,str2
 0080  B4 09		     1		mov ah,9
 0082  CD 21		     1		int 21h
					input T_Temp    ;输入电话号码暂存缓冲区，带回车符结束
 0084  8D 16 07FA R	     1		lea dx,T_Temp
 0088  B4 0A		     1		mov ah,0ah
 008A  CD 21		     1		int 21h
					quhc T_Temp,T_T ;去除回车符保存
 008C  2B D2		     1		sub dx,dx
 008E  8A 16 07FB R	     1		mov dl,T_Temp+1		 ;Temp中的字符数
 0092  8D 36 07FC R	     1		lea si,T_T             ;T的偏移地址
 0096  03 F2		     1		add si,dx            ;T转移到Temp结束位置
 0098  C6 04 20		     1		mov byte ptr[si], ' ';把本来Temp的回车位置的回车替换成空格
 009B  8D 36 07E5 R			lea si,N_T      ;将姓名的偏移地址保存在si
 009F  B9 0014				mov cx,20
 00A2  FC				cld
 00A3  F3/ A4				rep movsb       ;将si中的20个字节的姓名内容按字节传送到di，即50*32的号码簿中
 00A5  8D 36 07FC R			lea si,T_T
 00A9  B9 000C				mov cx,12
 00AC  FC				cld
 00AD  F3/ A4				rep movsb       ;将si中的12个字节的号码内容按字节传送到di，即50*32的号码簿中
 00AF  FF 06 0000 R			inc count       ;count记录有几条记录
 00B3  C3				ret             ;返回主程序
 00B4				Insert endp

 00B4				Search proc;查找子程序
				;------------------------按姓名查找-----------------------;
 00B4					T0:print window2
 00B4  8D 16 06A4 R	     1		lea dx,window2
 00B8  B4 09		     1		mov ah,9
 00BA  CD 21		     1		int 21h
 00BC  B4 01				   mov ah,1
 00BE  CD 21				   int 21h
 00C0  3C 31				   cmp al,'1'      ;按姓名查找
 00C2  75 7B				   jne T1          ;否则进入下一个判断
					   print str1
 00C4  8D 16 06FC R	     1		lea dx,str1
 00C8  B4 09		     1		mov ah,9
 00CA  CD 21		     1		int 21h
					   renew N_Temp,20 ;清空姓名缓冲区
 00CC  B9 0014		     1		mov cx,20    ;置为空格的位数，inc命令自动与cx作比较，到了自动结束loop
 00CF  8D 36 07E3 R	     1		lea si,N_Temp     ;还原nn的内容，将其置为空白内容
 00D3  C6 04 20		     1		??0002:mov byte ptr[si], ' '
 00D6  46		     1		     inc si
 00D7  E2 FA		     1		     loop ??0002
					   input N_Temp    ;输入姓名，保存在缓冲区
 00D9  8D 16 07E3 R	     1		lea dx,N_Temp
 00DD  B4 0A		     1		mov ah,0ah
 00DF  CD 21		     1		int 21h
					   quhc N_Temp,N_T ;将输入的姓名去除回车符，保存
 00E1  2B D2		     1		sub dx,dx
 00E3  8A 16 07E4 R	     1		mov dl,N_Temp+1		 ;Temp中的字符数
 00E7  8D 36 07E5 R	     1		lea si,N_T             ;T的偏移地址
 00EB  03 F2		     1		add si,dx            ;T转移到Temp结束位置
 00ED  C6 04 20		     1		mov byte ptr[si], ' ';把本来Temp的回车位置的回车替换成空格
				;************************按姓名查找************************;	   
 00F0  8B 0E 0000 R			   mov cx,count            ;将号码簿中存在的记录数保存到cx中
 00F4  C7 06 0002 R 0004 R		   mov Temp,offset telbook ;用Temp记录号码薄的偏移地址
 00FA  51				F3:push cx      ;cx入栈保存，即所有的记录数量
 00FB  8B 36 0002 R			   mov si,Temp  ;si记录号码薄的偏移地址
 00FF  8D 1E 07E5 R			   lea bx,N_T   ;将刚刚输入的姓名的偏移地址保存在bx中
 0103  B9 0014				   mov cx,20    ;cx中保存姓名的最大值20
 0106  8A 14				F2:mov dl,[si]  ;号码薄记录保存在dl
 0108  3A 17				   cmp dl,[bx]  ;号码薄中的记录与刚刚输入的姓名作比较
 010A  75 20				   jne F1       ;不相等跳到F1，移动号码薄的开始位置
 010C  46				   inc si
 010D  43				   inc bx       ;否则都向后移一位继续比较下一个字节
 010E  E2 F6				   loop F2      ;cx初始值为20，每次loop操作减一，到0结束，表示该姓名结束比较
				;*************cx为0，该姓名20个字节全部比较完成，且没有跳到JNE，所以匹配，输出找到的记录**************;
					   print str3   ;找到，输出记录
 0110  8D 16 0725 R	     1		lea dx,str3
 0114  B4 09		     1		mov ah,9
 0116  CD 21		     1		int 21h
 0118  8B 16 0002 R			   mov dx,Temp  ;将此条记录输出
 011C  B4 09				   mov ah,9
 011E  CD 21				   int 21h
					   print str5
 0120  8D 16 0760 R	     1		lea dx,str5
 0124  B4 09		     1		mov ah,9
 0126  CD 21		     1		int 21h
 0128  59				   pop cx       ;cx出栈，变回号码薄的记录条数
 0129  E9 00A2				   jmp F0       ;查找结束，找到，跳回主程序
				;*************该名字不匹配，跳到下一个名字开始的地方。直到号码薄中所有记录比完，输出没找到************;
 012C  83 06 0002 R 20			F1:add Temp,32  ;跳32个字节到下一个姓名开始的位置
 0131  59				   pop cx
 0132  E2 C6				   loop F3      ;重复查找操作，直到cx为0时结束，注意此时的cx是出栈后的cx，即号码薄记录的条数
					   print str4   ;两个loop操作都结束时，表示号码薄中的记录都比较完成，没有找到
 0134  8D 16 074D R	     1		lea dx,str4
 0138  B4 09		     1		mov ah,9
 013A  CD 21		     1		int 21h
 013C  E9 008F				   jmp F0       ;查找结束，没找到，跳到主程序

				;------------------------按号码查找-------------------------;
 013F  3C 32				T1:cmp al,'2'
 0141  75 7C				   jne T2          ;否则进入下一个判断
					   print str2
 0143  8D 16 070F R	     1		lea dx,str2
 0147  B4 09		     1		mov ah,9
 0149  CD 21		     1		int 21h
					   renew T_Temp,8  ;清空号码缓冲区
 014B  B9 0008		     1		mov cx,8    ;置为空格的位数，inc命令自动与cx作比较，到了自动结束loop
 014E  8D 36 07FA R	     1		lea si,T_Temp     ;还原nn的内容，将其置为空白内容
 0152  C6 04 20		     1		??0003:mov byte ptr[si], ' '
 0155  46		     1		     inc si
 0156  E2 FA		     1		     loop ??0003
					   input T_Temp
 0158  8D 16 07FA R	     1		lea dx,T_Temp
 015C  B4 0A		     1		mov ah,0ah
 015E  CD 21		     1		int 21h
					   quhc T_Temp,T_T ;将输入到缓冲区的号码去除回车符保存
 0160  2B D2		     1		sub dx,dx
 0162  8A 16 07FB R	     1		mov dl,T_Temp+1		 ;Temp中的字符数
 0166  8D 36 07FC R	     1		lea si,T_T             ;T的偏移地址
 016A  03 F2		     1		add si,dx            ;T转移到Temp结束位置
 016C  C6 04 20		     1		mov byte ptr[si], ' ';把本来Temp的回车位置的回车替换成空格
				;--------------按号码查找（具体操作与按姓名相同）-----------;
 016F  8B 0E 0000 R			   mov cx,count
 0173  C7 06 0002 R 0004 R		   mov Temp,offset telbook
 0179  51				K3:push cx
 017A  8B 36 0002 R			   mov si,Temp
 017E  83 C6 14				   add si,20    ;将si的位置移到号码开始的位置，因为名字占20个字节，所以加上20
 0181  8D 1E 07FC R			   lea bx,T_T
 0185  B9 0008				   mov cx,8     ;号码占8个字节
 0188  8A 14				K2:mov dl,[si]
 018A  3A 17				   cmp dl,[bx]
 018C  75 1F				   jne K1       ;不相等就跳到下一个号码开始的位置，重新开始比较
 018E  46				   inc si
 018F  43				   inc bx
 0190  E2 F6				   loop K2
				;----------------找到号码，匹配，输出该条记录---------------;	   
					   print str3
 0192  8D 16 0725 R	     1		lea dx,str3
 0196  B4 09		     1		mov ah,9
 0198  CD 21		     1		int 21h
 019A  8B 16 0002 R			   mov dx,Temp
 019E  B4 09				   mov ah,9
 01A0  CD 21				   int 21h
					   print str5
 01A2  8D 16 0760 R	     1		lea dx,str5
 01A6  B4 09		     1		mov ah,9
 01A8  CD 21		     1		int 21h
 01AA  59				   pop cx
 01AB  EB 21				   jmp F0
				;------------跳到下一个号码，直到所有记录都被比过-----------;
 01AD  83 06 0002 R 20			K1:add Temp,32
 01B2  59				   pop cx
 01B3  E2 C4				   loop K3
					   print str4   ;所有记录没有找到，输出不存在 
 01B5  8D 16 074D R	     1		lea dx,str4
 01B9  B4 09		     1		mov ah,9
 01BB  CD 21		     1		int 21h
 01BD  EB 0F				   jmp F0
 01BF  3C 33				T2:cmp al,'3'   ;返回主程序重新选择功能
 01C1  74 0B				   je F0
					   print error1 ;以上都不符合，则输入的数字有问题，输出提示语句并重新跳回查找菜单
 01C3  8D 16 07BE R	     1		lea dx,error1
 01C7  B4 09		     1		mov ah,9
 01C9  CD 21		     1		int 21h
 01CB  E9 FEE6				   jmp T0
 01CE  C3				F0:ret
 01CF				Search endp

 01CF				List proc;显示号码薄子程序
					print str3
 01CF  8D 16 0725 R	     1		lea dx,str3
 01D3  B4 09		     1		mov ah,9
 01D5  CD 21		     1		int 21h
 01D7  83 3E 0000 R 00			cmp count,0
 01DC  74 15				je Z2          ;如果count为0，则表示号码薄里没有记录
 01DE  8B 0E 0000 R			mov cx,count   ;否则将要输入的记录的条数保存到cx，控制loop循环次数
 01E2  8D 36 0004 R			lea si,telbook ;将号码薄偏移地址保存到si
 01E6  8B D6			 Z1:mov dx,si
 01E8  B4 09				mov ah,9
 01EA  CD 21				int 21h
 01EC  83 C6 20				add si,32      ;加上32，跳到下一条记录重复输出操作
 01EF  E2 F5				loop Z1
 01F1  EB 08				jmp Z3
 01F3				 Z2:print str6
 01F3  8D 16 0786 R	     1		lea dx,str6
 01F7  B4 09		     1		mov ah,9
 01F9  CD 21		     1		int 21h
 01FB				 Z3:print str5
 01FB  8D 16 0760 R	     1		lea dx,str5
 01FF  B4 09		     1		mov ah,9
 0201  CD 21		     1		int 21h
 0203  C3			    ret
 0204				List endp

 0204  B4 4C			L5:mov ah,4ch      ;跳出DOS，程序结束
 0206  CD 21			   int 21h

 0208				code ends
				end start





Microsoft (R) Macro Assembler Version 6.11		    10/21/21 12:24:09
tempfile.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

input  . . . . . . . . . . . . .	Proc
print  . . . . . . . . . . . . .	Proc
quhc . . . . . . . . . . . . . .	Proc
renew  . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

code . . . . . . . . . . . . . .	16 Bit	 0208	  Para	  Private 
data . . . . . . . . . . . . . .	16 Bit	 0808	  Para	  Private 


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

Insert . . . . . . . . . . . . .	P Near	 0043	  code	Length= 0071 Public
  ??0000 . . . . . . . . . . . .	L Near	 004A	  code	
  ??0001 . . . . . . . . . . . .	L Near	 0057	  code	
List . . . . . . . . . . . . . .	P Near	 01CF	  code	Length= 0035 Public
  Z1 . . . . . . . . . . . . . .	L Near	 01E6	  code	
  Z2 . . . . . . . . . . . . . .	L Near	 01F3	  code	
  Z3 . . . . . . . . . . . . . .	L Near	 01FB	  code	
Search . . . . . . . . . . . . .	P Near	 00B4	  code	Length= 0145 Public
  T0 . . . . . . . . . . . . . .	L Near	 00B4	  code	
  ??0002 . . . . . . . . . . . .	L Near	 00D3	  code	
  F3 . . . . . . . . . . . . . .	L Near	 00FA	  code	
  F2 . . . . . . . . . . . . . .	L Near	 0106	  code	
  F1 . . . . . . . . . . . . . .	L Near	 012C	  code	
  T1 . . . . . . . . . . . . . .	L Near	 013F	  code	
  ??0003 . . . . . . . . . . . .	L Near	 0152	  code	
  K3 . . . . . . . . . . . . . .	L Near	 0179	  code	
  K2 . . . . . . . . . . . . . .	L Near	 0188	  code	
  K1 . . . . . . . . . . . . . .	L Near	 01AD	  code	
  T2 . . . . . . . . . . . . . .	L Near	 01BF	  code	
  F0 . . . . . . . . . . . . . .	L Near	 01CE	  code	


Symbols:

                N a m e                 Type     Value    Attr

L1 . . . . . . . . . . . . . . .	L Near	 000B	  code	
L2 . . . . . . . . . . . . . . .	L Near	 0020	  code	
L3 . . . . . . . . . . . . . . .	L Near	 0029	  code	
L4 . . . . . . . . . . . . . . .	L Near	 0032	  code	
L5 . . . . . . . . . . . . . . .	L Near	 0204	  code	
N_Temp . . . . . . . . . . . . .	Byte	 07E3	  data	
N_T  . . . . . . . . . . . . . .	Byte	 07E5	  data	
T_Temp . . . . . . . . . . . . .	Byte	 07FA	  data	
T_T  . . . . . . . . . . . . . .	Byte	 07FC	  data	
count  . . . . . . . . . . . . .	Word	 0000	  data	
error1 . . . . . . . . . . . . .	Byte	 07BE	  data	
error  . . . . . . . . . . . . .	Byte	 0799	  data	
start  . . . . . . . . . . . . .	L Near	 0000	  code	
str1 . . . . . . . . . . . . . .	Byte	 06FC	  data	
str2 . . . . . . . . . . . . . .	Byte	 070F	  data	
str3 . . . . . . . . . . . . . .	Byte	 0725	  data	
str4 . . . . . . . . . . . . . .	Byte	 074D	  data	
str5 . . . . . . . . . . . . . .	Byte	 0760	  data	
str6 . . . . . . . . . . . . . .	Byte	 0786	  data	
telbook  . . . . . . . . . . . .	Byte	 0004	  data	
temp . . . . . . . . . . . . . .	Word	 0002	  data	
window1  . . . . . . . . . . . .	Byte	 0644	  data	
window2  . . . . . . . . . . . .	Byte	 06A4	  data	

	   0 Warnings
	   0 Errors
